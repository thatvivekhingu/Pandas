import pandas as pd

data = {
    "Name": ['Ram', 'Shyam', 'Ghanshyam', 'Dhanshyam', 'Aditi', 'Jagdish', 'Raj', 'Simran'],
    "Age": [28, 34, 22, 30, 29, 40, 25, 32],
    "Salary": [50000, 60000, 45000, 52000, 49000, 70000, 48000, 58000],
    "Performance_Score": [85, 90, 78, 92, 88, 95, 80, 89]
}

df=pd.DataFrame(data)
print(df)

-----------------------------------------------------------------------------------------------------------------------------
# adding column in data set in last column::::::
#syntax: df["column_name"]=some_data(what you can store in clmn)(even calculate data like 10% other type data can you store)

df["Bonus"]= df["Salary"]* 0.1 #(add data of salaray 10% )
print(f"\n {df}")

#-> if you add column in specific location so used insert()method
#syntax : df.insert(loc,"column_name",some_data)
df.insert(1,"Rank",[5,7,3,4,9,6,1,2])
print(f'\n\n Using insert method add the column')
print(f'\n{df}')


-----------------------------------------------------------------------------------------------------------------------------

#Updating any values in data set 
#syntax: .loc[row_index,"column_name"] = new_data

# if i want change the salary of Aditi

df.loc[4,"Salary"] = 62000
print(df)

# if i want to update salary value increases 5%
df['Salary']=df['Salary']* 1.05

print(df)
-----------------------------------------------------------------------------------------------------------------------------

#Removing any column in data set 
#syntax: df.drop(columns=["Column_name"], inplace=True) -> inplace true means modify in real data, false give new updated dataset

df.drop(columns=["Age"],inplace=True) # remove the age column 
print(f'\n{df}')

df.drop(columns=["Age","Salary"],inplace=True) # remove the age . salary column 
print(f'\n{df}')
